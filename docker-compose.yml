version: '3'
services:
  postgis:
    image: jbl-carto/postgis:0.0.1
    container_name: 'postgis'
    build: 
      context: './jbl-postgis'
      args:
        # because it's our custom diretrory, not present ion base postgis image, cf. ./postgis/Dockerfile
        - DOWNLOADED_PBF_FILES_HOME=/downloaded-pbf-files
        #Â - POSTGRES_DB=dba_datab
        - POSTGRES_DB=postgres
        - POSTGRES_USER=dba_user
        - POSTGRES_PASSWORD=firstcutisthedeppest
        - APP_DB_NAME=$NOM_BDD_GEOLOC
        - APP_DB_USER_NAME=renderer_user
        - APP_DB_USER_PWD=whereischarlie
    volumes:
      # - geodata-volume:/var/lib/postgresql/data
      # - ./data:/var/lib/postgresql/data
      # cf. './.env' file , PBF_VAULT_HOME=/carto/vault
      - $PBF_VAULT_HOME:/downloaded-pbf-files
    environment:
      # - POSTGRES_DB=dba_datab
      - POSTGRES_DB=postgres
      # Is there no dad at shinesolutions.com?
      - POSTGRES_USER=dba_user
      - POSTGRES_PASSWORD=firstcutisthedeppest
      - DOWNLOADED_PBF_FILES_HOME=/downloaded-pbf-files
      - APP_DB_NAME=$NOM_BDD_GEOLOC
      - APP_DB_USER_NAME=renderer_user
      - APP_DB_USER_PWD=whereischarlie
    networks:
      - cartoproto
    restart: always
#   jbl_postgis:
#     image: carto-proto/postgis:0.0.1
#     container_name: 'jblpostgis'
#     build: 
#       context: './postgis'
#       args:
#         # because it's our custom diretrory, not present ion base postgis image, cf. ./postgis/Dockerfile
#         - DOWNLOADED_PBF_FILES_HOME=/downloaded-pbf-files
#         - POSTGRES_DB=$NOM_BDD_GEOLOC
#         - POSTGRES_USER=renderer-user
#         - POSTGRES_PASSWORD=whereischarlie
#     volumes:
#       - geodata-volume:/var/lib/postgresql/data
#       # - ./data:/var/lib/postgresql/data
#       # cf. './.env' file , PBF_VAULT_HOME=/carto/vault
#       - $PBF_VAULT_HOME:/downloaded-pbf-files
#     environment:
#       - POSTGRES_DB=$NOM_BDD_GEOLOC
#       # Is there no dad at shinesolutions.com?
#       - POSTGRES_USER=renderer-user
#       - POSTGRES_PASSWORD=whereischarlie
#       - DOWNLOADED_PBF_FILES_HOME=/downloaded-pbf-files
#     networks:
#       - cartoproto
#     restart: always
  renderer:
    image: carto-proto/gopnik-mapnik:0.0.1
    container_name: 'rendereurpoulet'
    build: 
      context: ./renderer
      args:
        # Is there no dad at shinesolutions.com?
        - MAPNIK_POSTGRES_DB_HOST=postgis
        - MAPNIK_POSTGRES_DB_PORT_NO=5432
        - MAPNIK_POSTGRES_DB=$NOM_BDD_GEOLOC
        - MAPNIK_POSTGRES_USER=renderer-user
        - MAPNIK_POSTGRES_PASSWORD=whereischarlie
    volumes:
      - ./renderer/map_data:/map_data
      - ./renderer/scripts:/scripts
      - ./renderer/scripts:/shapes
      # instead of deprecated 'volumes_from' directive with read-only option
      # - geodata-volume:/var/lib/postgresql/data
#     volumes_from:
#       - postgis:ro
    environment:
      # Is there no dad at shinesolutions.com?
      - MAPNIK_POSTGRES_DB_HOST=postgis
      - MAPNIK_POSTGRES_DB_PORT_NO=5432
      - MAPNIK_POSTGRES_DB=$NOM_BDD_GEOLOC
      - MAPNIK_POSTGRES_USER=renderer-user
      - MAPNIK_POSTGRES_PASSWORD=whereischarlie
    ports:
      - "8080:8080"
      - "9090:9090"
      - "8090:8090"
    expose:
      - 8080/tcp
      - 9090/tcp
      # I saw in docker logs, gopnik/mapnik trying to connect to 127.0.0.1:8090, with connection refused error
      - 8090/tcp
    depends_on:
      - postgis
    networks:
      - cartoproto
    restart: always
    
  web:
    image: carto-proto/nginx:0.0.1
    image: nginx:1.11-alpine
    volumes:
      - ./web:/usr/share/nginx/html
    ports:
      - "8888:80"
    networks:
      - cartoproto
    restart: always

networks:
  cartoproto:
    # name: 'reseau-devops'
    driver: bridge
#     external: true 
#     ipam:
#       config:
#         - subnet: 192.168.160.0/24
#         - gateway: 192.168.160.1
#         # - gateway: 172.16.1.1
# - 
# + NAMED VOLUMES 
# - 
volumes:
     geodata-volume:
# -      pbf-vault-volume:
# -      
# - volumes:
# -   logstash_dir:
# -     driver: local
# -     driver_opts:
# -       o: bind
# -       type: none
# -       device: /path/to/logstash/folder
# - 
# -   filebeat_dir:
# -     driver: local
# -     driver_opts:
# -       o: bind
# -       type: none
# -       device: /path/to/filebeat/folder
